package wci.backend.compiler;

import wci.backend.Backend;
import wci.intermediate.ICode;
import wci.intermediate.SymTab;
import wci.intermediate.SymTabStack;
import wci.message.Message;
import wci.message.MessageType;

public class CodeGenerator extends Backend {

    /**
     * Process the intermediate code and the symbol table generated by the parser to generate machine-language instructions
     * @param iCode the intermediae code
     * @param symTabStack the symbol table stack
     * @throws Exception
     */
    @Override
    public void process(ICode iCode, SymTabStack symTabStack) throws Exception {
        long startTime = System.currentTimeMillis();
        float elapsedTime = (System.currentTimeMillis() - startTime) / 1000f;
        int instructionCount = 0;

        //send the compiler summary message.
        sendMessage(new Message(MessageType.COMPILER_SUMMARY,new Number[]{instructionCount,elapsedTime}));
    }
}
